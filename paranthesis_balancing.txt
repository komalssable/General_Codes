// function paranthesis_balancing(str) {
//   let stack = [];
//   let balanced = {
//     '(': ')','[': ']','{': '}'
//     }

//   for(let i=0;i<str.length;i++) {
//     if(str[i] === '(' || str[i] === '[' || str[i] === '{'){
//       stack.push(str[i]);
//     }
//     else {
//       let popped=stack.pop();

//       if(str[i] !== balanced[popped]){
//         return false;
//       };
       
//     }
//     if(stack.length !== 0) {
//       return false;
//     };

//    return true;
//   }
// }

// console.log(paranthesis_balancing("(){}"));

let paranthesisBalancing = function(str) {
    let stack = [];
    let map= {
        '(': ')',
        '[': ']',
        '{': '}'
    }
    for (let i = 0; i < str.length; i++) {
        
        if (str[i] === '(' || str[i] === '{' || str[i] === '[') {
            stack.push(str[i]);
        }
        
        else {
            let top= stack.pop();
            
            if (str[i] !== map[top]) {
                return false
            };
        }
    }
    
    if (stack.length !== 0) {
        return false
    };
    return true;
}
console.log(paranthesisBalancing("(){}"));